

/*
 * Date:2021-09-12 11:08
 * filename:07_functor_adapter_intro.cpp
 *
 */

/*
 * functor adapters是所有配接器中数量最庞大的一个族群，其配接灵活度也是前二者所不能及，可以配接、配接、再陪接。
 * 这些配接操作包括系结(bind),否定(negate),组合(compose),以及对一般函数或成员函数的修饰
 * C++标准可以从<functional>获得配接器的使用
 *
 * function adapters的价值在于，通过它们之间的绑定、组合、修饰能力，几乎可以无限制地创造出各种可能的表达式(expression)
 * 例如:
 * 我们可能希望找出某个序列中所有不小于12的元素个数
 * "不小于"就是"大于或等于"，我们可以选择STL内建的仿函数greater_equal,但如果希望完全遵循题目语意，
 * 坚持找出不小于12的元素个数，可以这么做:
 * not1(bind2nd(less<int>(), 12))
 * 这个式子将less<int>()的第二参数系结(绑定)为12,再加上否定操作，便形成了"不小于12"的语意
 * 整个凑合成为一个表达式(express),可与任何"可就二手表达式为参数"之算法搭配
 */



